<%#

Author: fnurl

Compile to json by using `make`
Implements the following virtual modifiers:

SpaceFn (hold spacebar)
SymbolFn1 (hold d+f)
SymbolFn2 (hold j+k)
ArrowFn

Modifications for ISO SE layout to a layout more like ANSI US.
%>

<%# Note to self on expansions:

"from": <%= from("keycode", ["mandatory modifier", ...], ["optional modifier", ...]) %>

<%#
"to": <%= to([["keycode", ["modifier", ...]]]) %>


<%
internal = { :vendor_id => 1452, :product_id => 632, :description => "Internal Apple Keyboard" }
external_apple_bt = { :vendor_id => 1452, :product_id => 598, :description => "External Apple BT Keyboard" }
external_apple_usb = { :vendor_id => 1452, :product_id => 524, :description => "External Apple USB Keyboard"}
identifiers = [internal, external_apple_bt, external_apple_usb]
%>

{
    "title": "Personal rules @fnurl.",
    "rules": [
        {
            "description": "Change caps_lock to Ctrl if pressed with other keys, to Escape if pressed alone. (Device restricted)",
            "manipulators": [
                {
                    "conditions": [ { "type": "device_if",
                                      "identifiers": <%= identifiers.to_json %> }
                    ],
                    "type": "basic",
                    "from": <%= from("caps_lock", [], ["any"]) %>,
                    "to": <%= to([["left_control"]]) %>,
                    "to_if_alone": <%= to([["escape"]]) %>
                }
            ]
        },
        {
            "description": "Change caps_lock to Ctrl if pressed with other keys, to Escape if pressed alone.",
            "manipulators": [
                {
                    "type": "basic",
                    "from": <%= from("caps_lock", [], ["any"]) %>,
                    "to": <%= to([["left_control"]]) %>,
                    "to_if_alone": <%= to([["escape"]]) %>
                }
            ]
        },
        {
            "description": "Change Left Ctrl to Hyper (Shift, Opt, Ctrl Cmd).",
            "manipulators": [
                {
                    "type": "basic",
                    "from": <%= from("left_control", [], []) %>,
                    "to": <%= to([["left_command", ["left_shift", "left_option", "left_control"]]]) %>
                }
            ]
        },
        {
            "description": "Arrow mode: R Opt as Arrow Mode.",
            "manipulators": [
                {
                    "type": "basic",
                    "from": <%= from("right_option", [], []) %>,
                    "to": [ { "set_variable": { "name": "arrow_mode", "value": 1 } } ],
                    "to_after_key_up": [ { "set_variable": { "name": "arrow_mode", "value": 0 } } ]
                }
            ]
        },
        {
            "description": "Arrow mode: R Cmd as Arrow Mode.",
            "manipulators": [
                {
                    "type": "basic",
                    "from": <%= from("right_command", [], []) %>,
                    "to": [ { "set_variable": { "name": "arrow_mode", "value": 1 } } ],
                    "to_after_key_up": [ { "set_variable": { "name": "arrow_mode", "value": 0 } } ]
                }
            ]
        },
        {
            "description": "Arrow mode US: open_bracket, semicolon, quote, backslash as arrows.",
            "manipulators": [
                {
                    <%# US ArrowFn+[ to up arrow %>
                    "conditions": [ { "type": "variable_if", "name": "arrow_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("open_bracket", [], []) %>,
                    "to": <%= to([["up_arrow"]]) %>
                },

                {
                    <%# US ArrowFn+; to left arrow %>
                    "conditions": [ { "type": "variable_if", "name": "arrow_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("semicolon", [], []) %>,
                    "to": <%= to([["left_arrow"]]) %>
                },
                {
                    <%# US ArrowFn+' to down arrow %>
                    "conditions": [ { "type": "variable_if", "name": "arrow_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("quote", [], []) %>,
                    "to": <%= to([["down_arrow"]]) %>
                },
                {
                    <%# US ArrowFn+\ to right arrow %>
                    "conditions": [ { "type": "variable_if", "name": "arrow_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("backslash", [], []) %>,
                    "to": <%= to([["right_arrow"]]) %>
                },
                {
                    <%# US ArrowFn+\ to right arrow (BT keyboard?) %>
                    "conditions": [ { "type": "variable_if", "name": "arrow_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("close_bracket", [], []) %>,
                    "to": <%= to([["right_arrow"]]) %>
                }
            ]
        },
                {
            "description": "Arrow mode SE: åöä' as arrows.",
            "manipulators": [
                {
                    <%# SE ArrowFn+å to up arrow %>
                    "conditions": [ { "type": "variable_if", "name": "arrow_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("open_bracket", [], []) %>,
                    "to": <%= to([["up_arrow"]]) %>
                },

                {
                    <%# SE ArrowFn+ö to left arrow %>
                    "conditions": [ { "type": "variable_if", "name": "arrow_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("semicolon", [], []) %>,
                    "to": <%= to([["left_arrow"]]) %>
                },
                {
                    <%# SE ArrowFn+ä to down arrow %>
                    "conditions": [ { "type": "variable_if", "name": "arrow_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("quote", [], []) %>,
                    "to": <%= to([["down_arrow"]]) %>
                },
                {
                    <%# SE ArrowFn+' to right arrow %>
                    "conditions": [ { "type": "variable_if", "name": "arrow_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("non_us_pound", [], []) %>,
                    "to": <%= to([["right_arrow"]]) %>
                }
            ]
        },
        {
            "description": "Map open_bracket, quote and semicolon to Swedish chars on keypad.",
            "manipulators": [
                {
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode1", "value": 0 },
                                    { "type": "variable_if", "name": "symbolfn_mode2", "value": 0 },
                                    { "type": "variable_if", "name": "arrow_mode", "value": 0 } ],
                    "type": "basic",
                    "from": <%= from("open_bracket", [], ["any"]) %>,
                    "to": <%= to([["keypad_7"]]) %>
                },
                {
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode1", "value": 0 },
                                    { "type": "variable_if", "name": "symbolfn_mode2", "value": 0 },
                                    { "type": "variable_if", "name": "arrow_mode", "value": 0 } ],
                    "type": "basic",
                    "from": <%= from("quote", [], ["any"]) %>,
                    "to": <%= to([["keypad_8"]]) %>
                },
                {
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode1", "value": 0 },
                                    { "type": "variable_if", "name": "symbolfn_mode2", "value": 0 },
                                    { "type": "variable_if", "name": "arrow_mode", "value": 0 } ],
                    "type": "basic",
                    "from": <%= from("semicolon", [], ["any"]) %>,
                    "to": <%= to([["keypad_9"]]) %>
                }
            ]
        },
        {
            "description": "Map SE dash to slash, SE underscore to ?, plus to hyphen, and paragraph to backick.",
            "manipulators": [
                {
                    <%# dash to slash %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode1", "value": 0 },
                                    { "type": "variable_if", "name": "symbolfn_mode2", "value": 0 },
                                    { "type": "variable_if", "name": "arrow_mode", "value": 0 } ],
                    "type": "basic",
                    "from": <%= from("slash", [], []) %>,
                    "to": <%= to([["7", ["left_shift"]]]) %>
                },
                {
                    <%# shift dash to questionmark %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode1", "value": 0 },
                                    { "type": "variable_if", "name": "symbolfn_mode2", "value": 0 },
                                    { "type": "variable_if", "name": "arrow_mode", "value": 0 } ],
                    "type": "basic",
                    "from": <%= from("slash", ["right_shift"], []) %>,
                    "to": <%= to([["hyphen", ["left_shift"]]]) %>
                },
                {
                    <%# plus to hyphen %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode1", "value": 0 },
                                    { "type": "variable_if", "name": "symbolfn_mode2", "value": 0 },
                                    { "type": "variable_if", "name": "arrow_mode", "value": 0 } ],
                    "type": "basic",
                    "from": <%= from("hyphen", [], []) %>,
                    "to": <%= to([["slash"]]) %>
                },
                {
                    <%# shift plus to underscore %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode1", "value": 0 },
                                    { "type": "variable_if", "name": "symbolfn_mode2", "value": 0 },
                                    { "type": "variable_if", "name": "arrow_mode", "value": 0 } ],
                    "type": "basic",
                    "from": <%= from("hyphen", ["right_shift"], []) %>,
                    "to": <%= to([["slash", ["right_shift"]]]) %>
                },
                {
                    <%# paragraph to backtick %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode1", "value": 0 },
                                    { "type": "variable_if", "name": "symbolfn_mode2", "value": 0 },
                                    { "type": "variable_if", "name": "arrow_mode", "value": 0 } ],
                    "type": "basic",
                    "from": <%= from("grave_accent_and_tilde", [], []) %>,
                    "to": <%= to([["equal_sign", ["left_shift", "right_alt"]]]) %>
                },
                {
                    <%# shift paragraph to tilde %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode1", "value": 0 },
                                    { "type": "variable_if", "name": "symbolfn_mode2", "value": 0 },
                                    { "type": "variable_if", "name": "arrow_mode", "value": 0 } ],
                    "type": "basic",
                    "from": <%= from("grave_accent_and_tilde", ["right_shift"], []) %>,
                    "to": <%= to([["close_bracket", ["right_alt"]]]) %>
                }
            ]
        },
        {
            "description": "SpaceFN: Space enables SpaceFN mode.",
            "manipulators": [
                {
                    "type": "basic",
                    "from": <%= from("spacebar", [], ["any"]) %>,
                    "to": [ { "set_variable": { "name": "spacefn_mode", "value": 1 } } ],
                    "to_after_key_up": [ { "set_variable": { "name": "spacefn_mode", "value": 0 } } ],
                    "to_if_alone": <%= to([["spacebar"]]) %>
                }
            ]
        },
        {
            "description": "SpaceFN: Space+[sdfghjkl] to parens (US Layout).",
            "manipulators": [
                {
                    <%# US SpaceFn+g to left square bracket, [ %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("g", [], []) %>,
                    "to": <%= to([["open_bracket"]]) %>
                },
                {
                    <%# US SpaceFn+f to left parenthesis, ( %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("f", [], []) %>,
                    "to": <%= to([["9", ["left_shift"]]]) %>
                },
                {
                    <%# US SpaceFn+d to left curly bracket, { %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("d", [], []) %>,
                    "to": <%= to([["open_bracket", ["left_shift"]]]) %>
                },
                {
                    <%# US SpaceFn+s to less than, < %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("s", [], []) %>,
                    "to": <%= to([["comma", ["left_shift"]]]) %>
                },
                {
                    <%# US SpaceFn+h to right square bracket, ] %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("h", [], []) %>,
                    "to": <%= to([["close_bracket"]]) %>
                },
                {
                    <%# US SpaceFn+j to right parenthesis, ) %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("j", [], []) %>,
                    "to": <%= to([["0", ["left_shift"]]]) %>
                },
                {
                    <%# US SpaceFn+k to right curly bracket, } %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("k", [], []) %>,
                    "to": <%= to([["close_bracket", ["left_shift"]]]) %>
                },
                {
                    <%# US SpaceFn+l to greater than, > %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("l", [], []) %>,
                    "to": <%= to([["period", ["left_shift"]]]) %>
                }
            ]
        },
        {
            "description": "SpaceFN: Space+[sdfghjkl] to parens (SE Layout).",
            "manipulators": [
                {
                    <%# SE SpaceFn+g to left square bracket, [ %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("g", [], []) %>,
                    "to": <%= to([["8", ["right_alt"]]]) %>
                },
                {
                    <%# SE SpaceFn+f to left parenthesis, ( %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("f", [], []) %>,
                    "to": <%= to([["8", ["left_shift"]]]) %>
                },
                {
                    <%# SE SpaceFn+d to left curly bracket, { %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("d", [], []) %>,
                    "to": <%= to([["8", ["left_shift", "right_alt"]]]) %>
                },
                {
                    <%# SE SpaceFn+s to less than, < %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("s", [], []) %>,
                    "to": <%= to([["grave_accent_and_tilde"]]) %>
                },
                {
                    <%# SE SpaceFn+h to right square bracket, ] %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("h", [], []) %>,
                    "to": <%= to([["9", ["right_alt"]]]) %>
                },
                {
                    <%# SE SpaceFn+j to right parenthesis, ) %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("j", [], []) %>,
                    "to": <%= to([["9", ["left_shift"]]]) %>
                },
                {
                    <%# SE SpaceFn+k to right curly bracket, } %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("k", [], []) %>,
                    "to": <%= to([["9", ["left_shift", "right_alt"]]]) %>
                },
                {
                    <%# SE SpaceFn+l to greater than, > %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("l", [], []) %>,
                    "to": <%= to([["grave_accent_and_tilde", ["left_shift"]]]) %>
                }
            ]
        },
        {
            "description": "SpaceFN: Space+[cvbnm,] to dashes, colons and quotes (US Layout).",
            "manipulators": [
                {
                    <%# US SpaceFn+v to hyphen, - %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("v", [], []) %>,
                    "to": <%= to([["hyphen"]]) %>
                },
                {
                    <%# US SpaceFn+c to underscore, _ %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("c", [], []) %>,
                    "to": <%= to([["hyphen", ["left_shift"]]]) %>
                },
                {
                    <%# US SpaceFn+b to colon, : %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("b", [], []) %>,
                    "to": <%= to([["semicolon", ["left_shift"]]]) %>
                },
                {
                    <%# US SpaceFn+n to semicolon %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("n", [], []) %>,
                    "to": <%= to([["semicolon"]]) %>
                },
                {
                    <%# US SpaceFn+m to double quote, " %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("m", [], []) %>,
                    "to": <%= to([["quote", ["left_shift"]]]) %>
                },
                {
                    <%# US SpaceFn+, to single quote, ' %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("comma", [], []) %>,
                    "to": <%= to([["quote"]]) %>
                },
                {
                    <%# US SpaceFn+. to pipe, | %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("period", [], []) %>,
                    "to": <%= to([["backslash", ["left_shift"]]]) %>
                },
                {
                    <%# US SpaceFn+/ to backslash, \ %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("slash", [], []) %>,
                    "to": <%= to([["backslash"]]) %>
                }
            ]
        },
        {
            "description": "SpaceFN: Space+[cvbnm,] to dashes, colons and quotes (SE Layout).",
            "manipulators": [
                {
                    <%# SE SpaceFn+v to hyphen, - %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("v", [], []) %>,
                    "to": <%= to([["slash"]]) %>
                },
                {
                    <%# SE SpaceFn+c to underscore, _ %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("c", [], []) %>,
                    "to": <%= to([["slash", ["left_shift"]]]) %>
                },
                {
                    <%# SE SpaceFn+b to colon, : %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("b", [], []) %>,
                    "to": <%= to([["period", ["left_shift"]]]) %>
                },
                {
                    <%# SE SpaceFn+n to semicolon %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("n", [], []) %>,
                    "to": <%= to([["comma", ["left_shift"]]]) %>
                },
                {
                    <%# SE SpaceFn+m to double quote, " %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("m", [], []) %>,
                    "to": <%= to([["2", ["left_shift"]]]) %>
                },
                {
                    <%# SE SpaceFn+, to single quote, ' %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("comma", [], []) %>,
                    "to": <%= to([["backslash"]]) %>
                },
                {
                    <%# SE SpaceFn+. to pipe, | %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("period", [], []) %>,
                    "to": <%= to([["7", ["right_alt"]]]) %>
                },
                {
                    <%# SE SpaceFn+/ to backslash, \ %>
                    "conditions": [ { "type": "variable_if", "name": "spacefn_mode", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("slash", [], []) %>,
                    "to": <%= to([["7", ["left_shift", "right_alt"]]]) %>
                }
            ]
        },
        {
            "description": "SymbolFn 1 & 2: d+f enables Symbol mode 1, j+k enables symbol mode 2.",
            "manipulators": [
                {
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode2", "value": 0 } ],
                    "type": "basic",
                    "from": { "simultaneous": [ { "key_code": "d" }, { "key_code": "f" } ] },
                    "to": [ { "set_variable": { "name": "symbolfn_mode1", "value": 1 } } ],
                    "to_after_key_up": [ { "set_variable": { "name": "symbolfn_mode1", "value": 0 } } ]
                },
                {
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode1", "value": 0 } ],
                    "type": "basic",
                    "from": { "simultaneous": [ { "key_code": "j" }, { "key_code": "k" } ] },
                    "to": [ { "set_variable": { "name": "symbolfn_mode2", "value": 1 } } ],
                    "to_after_key_up": [ { "set_variable": { "name": "symbolfn_mode2", "value": 0 } } ]
                }
            ]
        },
        {
            "description": "SymbolFn 1: SymbolFn1+[hjkl;] to *$=&% (US Layout).",
            "manipulators": [
                {
                    <%# US SymbolFn1+j+k to return %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode1", "value": 1 } ],
                    "type": "basic",
                    "from": { "simultaneous": [ { "key_code": "j" }, { "key_code": "k" } ] },
                    "to": <%= to([["return_or_enter"]]) %>
                },
                {
                    <%# US SymbolFn1+n to return %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode1", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("n", [], []) %>,
                    "to": <%= to([["return_or_enter"]]) %>
                },
                {
                    <%# US SymbolFn1+h to * %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode1", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("h", [], []) %>,
                    "to": <%= to([["8", ["left_shift"]]]) %>
                },
                {
                    <%# US SymbolFn1+j to $ %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode1", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("j", [], []) %>,
                    "to": <%= to([["4", ["left_shift"]]]) %>
                },
                {
                    <%# US SymbolFn1+k to = %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode1", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("k", [], []) %>,
                    "to": <%= to([["equal_sign"]]) %>
                },
                {
                    <%# US SymbolFn1+l to & %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode1", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("l", [], []) %>,
                    "to": <%= to([["7", ["left_shift"]]]) %>
                },
                {
                    <%# US SymbolFn1+; to % %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode1", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("semicolon", [], []) %>,
                    "to": <%= to([["5", ["left_shift"]]]) %>
                }
            ]
        },
        {
            "description": "SymbolFn 1: SymbolFn1+[hjklö] to *$=&% (SE Layout).",
            "manipulators": [
                {
                    <%# SE SymbolFn1+j+k to return %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode1", "value": 1 } ],
                    "type": "basic",
                    "from": { "simultaneous": [ { "key_code": "j" }, { "key_code": "k" } ] },
                    "to": <%= to([["return_or_enter"]]) %>
                },
                {
                    <%# SE SymbolFn1+n to return %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode1", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("n", [], []) %>,
                    "to": <%= to([["return_or_enter"]]) %>
                },
                {
                    <%# SE SymbolFn1+h to * %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode1", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("h", [], []) %>,
                    "to": <%= to([["backslash", ["left_shift"]]]) %>
                },
                {
                    <%# SE SymbolFn1+j to $ %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode1", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("j", [], []) %>,
                    "to": <%= to([["4", ["right_alt"]]]) %>
                },
                {
                    <%# SE SymbolFn1+k to = %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode1", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("k", [], []) %>,
                    "to": <%= to([["0", ["left_shift"]]]) %>
                },
                {
                    <%# SE SymbolFn1+l to & %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode1", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("l", [], []) %>,
                    "to": <%= to([["6", ["left_shift"]]]) %>
                },
                {
                    <%# SE SymbolFn1+; to % %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode1", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("semicolon", [], []) %>,
                    "to": <%= to([["5", ["left_shift"]]]) %>
                }
            ]
        },
        {
            "description": "SymbolFn 2: SymbolFn2+[asdfg] to !@#^+ (US Layout).",
            "manipulators": [
                {
                    <%# US SymbolFn2+d+f to backspace %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode2", "value": 1 } ],
                    "type": "basic",
                    "from": { "simultaneous": [ { "key_code": "d" }, { "key_code": "f" } ] },
                    "to": <%= to([["delete_or_backspace"]]) %>
                },
                {
                    <%# US SymbolFn2+v to backspace %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode2", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("v", [], []) %>,
                    "to": <%= to([["delete_or_backspace"]]) %>
                },
                {
                    <%# US SymbolFn2+a to ! %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode2", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("a", [], []) %>,
                    "to": <%= to([["1", ["left_shift"]]]) %>
                },
                {
                    <%# US SymbolFn2+s to @ %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode2", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("s", [], []) %>,
                    "to": <%= to([["2", ["left_shift"]]]) %>
                },
                {
                    <%# US SymbolFn2+d to # %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode2", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("d", [], []) %>,
                    "to": <%= to([["3", ["left_shift"]]]) %>
                },
                {
                    <%# US SymbolFn2+f to ^ %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode2", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("f", [], []) %>,
                    "to": <%= to([["6", ["left_shift"]]]) %>
                },
                {
                    <%# US SymbolFn2+g to + %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode2", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("g", [], []) %>,
                    "to": <%= to([["equal_sign", ["left_shift"]]]) %>
                }
            ]
        },
        {
            "description": "SymbolFn 2: SymbolFn2+[asdfg] to !@#^+ (SE Layout).",
            "manipulators": [
                {
                    <%# SE SymbolFn2+d+f to backspace %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode2", "value": 1 } ],
                    "type": "basic",
                    "from": { "simultaneous": [ { "key_code": "d" }, { "key_code": "f" } ] },
                    "to": <%= to([["delete_or_backspace"]]) %>
                },
                {
                    <%# SE SymbolFn2+v to backspace %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode2", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("v", [], []) %>,
                    "to": <%= to([["delete_or_backspace"]]) %>
                },
                {
                    <%# SE SymbolFn2+a to ! %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode2", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("a", [], []) %>,
                    "to": <%= to([["1", ["left_shift"]]]) %>
                },
                {
                    <%# SE SymbolFn2+s to @ %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode2", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("s", [], []) %>,
                    "to": <%= to([["2", ["right_alt"]]]) %>
                },
                {
                    <%# SE SymbolFn2+d to # %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode2", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("d", [], []) %>,
                    "to": <%= to([["3", ["left_shift"]]]) %>
                },
                {
                    <%# SE SymbolFn2+f to ^ %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode2", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("f", [], []) %>,
                    "to": <%= to([["close_bracket", ["left_shift", "right_alt"]]]) %>
                },
                {
                    <%# SE SymbolFn2+g to + %>
                    "conditions": [ { "type": "variable_if", "name": "symbolfn_mode2", "value": 1 } ],
                    "type": "basic",
                    "from": <%= from("g", [], []) %>,
                    "to": <%= to([["hyphen"]]) %>
                }
            ]
        }
    ]
}

